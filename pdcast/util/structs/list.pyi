"""Mypy stubs for pdcast/util/structs/list.pyx"""
from __future__ import annotations

from typing import Any, Hashable, Iterable, Iterator


class ListNode:
    value: Any
    next: ListNode
    prev: ListNode


class LinkedList:
    head: ListNode
    tail: ListNode

    ######################
    ####    APPEND    ####
    ######################

    def __add__(self, other: Iterable[Any]) -> LinkedList: ...
    def __iadd__(self, other: Iterable[Any]) -> LinkedList: ...
    def __mul__(self, repeat: int) -> LinkedList: ...
    def __imul__(self, repeat: int) -> LinkedList: ...

    #####################
    ####    INDEX    ####
    #####################

    def __getitem__(self, index: int | slice) -> Any: ...
    def __setitem__(self, index: int | slice, value: Any) -> None: ...
    def __delitem__(self, index: int | slice) -> None: ...

    ###########################
    ####    COMPARISONS    ####
    ###########################

    def __lt__(self, other: Any) -> bool: ...
    def __le__(self, other: Any) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __gt__(self, other: Any) -> bool: ...
    def __ge__(self, other: Any) -> bool: ...

    ###############################
    ####    SPECIAL METHODS    ####
    ###############################

    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[Any]: ...
    def __reversed__(self) -> Iterator[Any]: ...
    def __contains__(self, item: Any) -> bool: ...
    def __bool__(self) -> bool: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...


class HashedList(LinkedList):
    nodes: dict[Any, ListNode]

    ######################
    ####    APPEND    ####
    ######################

    def __add__(self, other: Iterable[Hashable]) -> HashedList: ...
    def __iadd__(self, other: Iterable[Hashable]) -> HashedList: ...
    def __mul__(self, repeat: int) -> HashedList: ...
    def __imul__(self, repeat: int) -> HashedList: ...

    #####################
    ####    INDEX    ####
    #####################

    def __setitem__(self, index: int | slice, value: Hashable) -> None: ...

    ###############################
    ####    SPECIAL METHODS    ####
    ###############################

    def __contains__(self, item: Hashable) -> bool: ...
